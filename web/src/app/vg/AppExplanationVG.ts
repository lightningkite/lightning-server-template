// Package: com.lightningkite.template.vg
// Generated by Khrysalis - this file will be overwritten.
import { Drawables } from '../../resources/R'
import { AppExplanationBinding } from '../../resources/layouts/AppExplanationBinding'
import { ComponentAppExplanationBinding } from '../../resources/layouts/ComponentAppExplanationBinding'
import { ViewGenerator, onThrottledEventDo, showInPager } from '@lightningkite/rxjs-plus'
import { Observable, of } from 'rxjs'

//! Declares com.lightningkite.template.vg.AppExplanationVG
export class AppExplanationVG implements ViewGenerator {
    public static implementsViewGenerator = true;
    public constructor() {
    }
    
    
    //--- Properties
    
    public generate(dependency: Window): HTMLElement {
        
        const xml = AppExplanationBinding.inflate();
        
        //--- Set Up xml.explanation (overwritten on flow generation)
        of([1, 2, 3, 4])
            .pipe(showInPager(xml.explanation, undefined, (obs: Observable<number>): HTMLElement => {
            //--- Make Subview For xml.explanation (overwritten on flow generation)
            const cellXml = ComponentAppExplanationBinding.inflate();
            
            //--- Set Up cellXml.image (overwritten on flow generation)
            cellXml.image.src = Drawables.logo.file!;
            
            //--- Set Up cellXml.title (overwritten on flow generation)
            cellXml.title.innerText = "Example Text";
            
            //--- Set Up cellXml.content (overwritten on flow generation)
            cellXml.content.innerText = "Here is a text explanation";
            
            //--- Set Up cellXml.button (overwritten on flow generation)
            cellXml.button.innerText = `Let\'s go!`;
            onThrottledEventDo(cellXml.button, 'click', (): void => {
                this.cellXmlButtonClick();
            });
            
            //--- End Make Subview For xml.explanation (overwritten on flow generation)
            return cellXml.root;
        }));
        
        //--- Generate End (overwritten on flow generation)
        
        return xml.root;
    }
    
    
    
    //--- Actions
    
    public cellXmlButtonClick(): void {
    }
    
    
    //--- Body End
}
