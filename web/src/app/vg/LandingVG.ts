// Package: com.lightningkite.template.vg
// Generated by Khrysalis - this file will be overwritten.
import { LandingBinding } from '../../resources/layouts/LandingBinding'
import { AppExplanationVG } from './AppExplanationVG'
import { LogInVG } from './LogInVG'
import { ViewGenerator, ViewGeneratorStack, onThrottledEventDo, xStackPush } from '@lightningkite/rxjs-plus'

//! Declares com.lightningkite.template.vg.LandingVG
export class LandingVG implements ViewGenerator {
    public static implementsViewGenerator = true;
    public constructor(public readonly root: ViewGeneratorStack, public readonly stack: ViewGeneratorStack) {
    }
    
    
    //--- Properties
    
    public generate(dependency: Window): HTMLElement {
        
        const xml = LandingBinding.inflate();
        
        //--- Set Up xml.background (overwritten on flow generation)
        
        //--- Set Up xml.anonLogin (overwritten on flow generation)
        onThrottledEventDo(xml.anonLogin, 'click', (): void => {
            this.anonLoginClick();
        });
        
        //--- Set Up xml.signUp (overwritten on flow generation)
        onThrottledEventDo(xml.signUp, 'click', (): void => {
            this.signUpClick();
        });
        
        //--- Set Up xml.logIn (overwritten on flow generation)
        onThrottledEventDo(xml.logIn, 'click', (): void => {
            this.logInClick();
        });
        
        //--- Generate End (overwritten on flow generation)
        
        return xml.root;
    }
    
    
    
    //--- Actions
    
    public anonLoginClick(): void {
        xStackPush(this.stack, new AppExplanationVG());
    }
    
    public signUpClick(): void {
        xStackPush(this.stack, new LogInVG(this.root, this.stack));
    }
    
    public logInClick(): void {
        xStackPush(this.stack, new LogInVG(this.root, this.stack));
    }
    
    
    //--- Body End
}
